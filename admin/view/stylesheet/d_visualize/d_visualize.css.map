{"version":3,"sources":["d_visualize.scss","base/helper/_mixins.scss","common/_img.scss","common/_typography.scss","base/helper/_functions.scss","component/_visualize.scss","component/_home.scss","component/_loader.scss","base/_palette.scss","components/_template-thumb.scss","elements/_auto_save_switch.scss","_config.scss"],"names":[],"mappings":"AAAA,+CCgPA,YACE,0BAA2B,CD9O7B,eEFE,eACA,WAAY,CDkIV,0CDjIJ,aGMI,aAAc,CAEjB,CFyHG,0CDjIJ,sYGYI,iBAAkB,CAErB,CHdD,qCGqBI,aACA,mBCfiC,CJPrC,4BGyBI,YAAa,CHzBjB,qCGqBI,aACA,mBCfiC,CJPrC,4BGyBI,YAAa,CHzBjB,qCGqBI,aACA,mBCfiC,CJPrC,4BGyBI,YAAa,CHzBjB,qCGqBI,aACA,mBCfiC,CJPrC,4BGyBI,YAAa,CHzBjB,qCGqBI,aACA,mBCfiC,CJPrC,4BGyBI,YAAa,CHzBjB,qCGqBI,aACA,mBCfiC,CJPrC,4BGyBI,YAAa,CHzBjB,oFGiCE,eACA,oBACA,uBC5BmC,CJPrC,oFGyCE,eACA,gBACA,uBCpCmC,CJPrC,oFGkDE,eACA,mBACA,qBC7CmC,CJPrC,oFG0DE,kBACA,eACA,mBACA,sBCtDmC,CJPrC,iCGiEE,eAAgB,CHjElB,oFGuEE,eACA,cACA,uBClEmC,CJPrC,cG6EE,mBCzDsC,CJpBxC,iBG+EI,mBC3DoC,CD4DrC,MElFD,mBACA,sBAAuB,CAIxB,UCLC,oBAAA,AAAa,oBAAb,AAAa,YAAA,CACd,kBCAG,UCI4B,CDNhC,eAKI,iBAAkB,CALtB,oBAQI,YAAa,CARjB,yBAUM,oBAAqB,CACtB,4CAWH,oBAAA,AACA,oBADA,AACA,aAAA,yBAAA,AACA,sBADA,AACA,mBAAA,wBAAA,AAAuB,qBAAvB,AAAuB,sBAAA,CATzB,mDAEI,WACA,oBACA,mBAAA,AACA,kBADA,AACA,cAAA,UAAW,CACZ,YAOD,gBAAiB,CAClB,aAGC,mBAAA,AACA,WADA,AACA,OAAA,mBHvBmC,CGqBrC,iBAII,cAAe,CAChB,mCAID,yBAAA,AAA8B,sBAA9B,AAA8B,6BAAA,CAC/B,oBExCC,gBACA,eAAgB,CAFlB,qCAII,oBLMiC,CKVrC,2BAQI,qBAAsB,CACvB,0BCPC,UFI4B,CENhC,iCAIM,aCac,CDZf","file":"d_visualize.css","sourcesContent":["@import \"lib/bootstrap4/bootstrap-grid.css\";\r\n@import \"base/import\";\r\n\r\n.visualize {\r\n  @import \"common/import\";\r\n}\r\n@import \"component/import\";\r\n@import \"components/import\";\r\n@import \"elements/import\";","@import \"../../config\";\r\n\r\n@mixin prefixes($property, $value) {\r\n  -webkit-#{$property}: #{$value};\r\n  -khtml-#{$property}: #{$value};\r\n  -moz-#{$property}: #{$value};\r\n  -ms-#{$property}: #{$value};\r\n  -o-#{$property}: #{$value};\r\n  #{$property}: #{$value};\r\n}\r\n\r\n@mixin placeholder {\r\n  &::-webkit-input-placeholder {\r\n    @content\r\n  }\r\n  &:-moz-placeholder {\r\n    @content\r\n  }\r\n  &::-moz-placeholder {\r\n    @content\r\n  }\r\n  &:-ms-input-placeholder {\r\n    @content\r\n  }\r\n}\r\n\r\n@mixin flex {\r\n  display: -webkit-box;\r\n  display: -ms-flexbox;\r\n  display: -webkit-flex;\r\n  display: flex;\r\n}\r\n\r\n@mixin inline-flex {\r\n  display: -webkit-inline-box;\r\n  display: -ms-inline-flexbox;\r\n  display: -webkit-inline-flex;\r\n  display: inline-flex;\r\n}\r\n\r\n@mixin transition($for: all, $value: .4s, $animate: ease) {\r\n  @include prefixes(\"transition\", $for $value $animate)\r\n}\r\n\r\n@mixin border-radius($radius: $borderRadiusBase) {\r\n  @include prefixes(\"border-radius\", $radius)\r\n}\r\n\r\n@mixin box-shadow($value: 0 0 5px #ccc) {\r\n  @include prefixes(\"box-shadow\", $value)\r\n}\r\n\r\n@mixin clearfix {\r\n  &:before,\r\n  &:after {\r\n    content: \" \";\r\n    display: table;\r\n  }\r\n  &:after {\r\n    clear: both;\r\n  }\r\n}\r\n\r\n@mixin arrow($direction, $size, $color) {\r\n  @if $direction == up {\r\n    border-left: $size solid transparent;\r\n    border-right: $size solid transparent;\r\n    border-bottom: $size solid $color;\r\n  } @else if $direction == down {\r\n    border-left: $size solid transparent;\r\n    border-right: $size solid transparent;\r\n    border-top: $size solid $color;\r\n  } @else if $direction == right {\r\n    border-top: $size solid transparent;\r\n    border-bottom: $size solid transparent;\r\n    border-left: $size solid $color;\r\n  } @else if $direction == left {\r\n    border-top: $size solid transparent;\r\n    border-bottom: $size solid transparent;\r\n    border-right: $size solid $color;\r\n  }\r\n}\r\n\r\n@mixin push-auto {\r\n  margin: {\r\n    left: auto;\r\n    right: auto;\r\n  }\r\n}\r\n\r\n@mixin pseudo($display: block, $pos: absolute, $content: '') {\r\n  content: $content;\r\n  display: $display;\r\n  position: $pos;\r\n}\r\n\r\n@mixin triangle($color, $direction, $size: 6px, $position: absolute, $round: false) {\r\n  @include pseudo($pos: $position);\r\n  width: 0;\r\n  height: 0;\r\n  @if $round {\r\n    border-radius: 3px;\r\n  }\r\n  @if $direction == down {\r\n    border-left: $size solid transparent;\r\n    border-right: $size solid transparent;\r\n    border-top: $size solid $color;\r\n    margin-top: 0 - round( $size / 2.5 );\r\n  } @else if $direction == up {\r\n    border-left: $size solid transparent;\r\n    border-right: $size solid transparent;\r\n    border-bottom: $size solid $color;\r\n    margin-bottom: 0 - round( $size / 2.5 );\r\n  } @else if $direction == right {\r\n    border-top: $size solid transparent;\r\n    border-bottom: $size solid transparent;\r\n    border-left: $size solid $color;\r\n    margin-right: -$size;\r\n  } @else if $direction == left {\r\n    border-top: $size solid transparent;\r\n    border-bottom: $size solid transparent;\r\n    border-right: $size solid $color;\r\n    margin-left: -$size;\r\n  }\r\n}\r\n\r\n@mixin mq($width, $type: max) {\r\n  @if map_has_key($breakpoints, $width) {\r\n    $width: map_get($breakpoints, $width);\r\n    @if $type == max {\r\n      $width: $width - 1px;\r\n    }\r\n    @media only screen and (#{$type}-width: $width) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n@mixin retina($image, $width, $height) {\r\n  @media (min--moz-device-pixel-ratio: 1.3),\r\n  (-o-min-device-pixel-ratio: 2.6/2),\r\n  (-webkit-min-device-pixel-ratio: 1.3),\r\n  (min-device-pixel-ratio: 1.3),\r\n  (min-resolution: 1.3dppx) {\r\n    /* Serving 2x image on Retina display */\r\n    background-image: url($image);\r\n    background-size: $width $height;\r\n  }\r\n}\r\n\r\n@mixin font-face($font-name, $file-name, $weight: normal, $style: normal) {\r\n  @font-face {\r\n    font-family: quote($font-name);\r\n    src: url($file-name + '.eot');\r\n    src: url($file-name + '.eot?#iefix') format('embedded-opentype'),\r\n    url($file-name + '.woff') format('woff'),\r\n    url($file-name + '.ttf') format('truetype'),\r\n    url($file-name + '.svg##{$font-name}') format('svg');\r\n    font-weight: $weight;\r\n    font-style: $style;\r\n  }\r\n}\r\n\r\n@mixin absolute-center {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  @include prefixes(\"transform\", translate(-50%, -50%))\r\n}\r\n\r\n@mixin vcenter() {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n@mixin center($top, $left) {\r\n  position: absolute;\r\n  margin-top: - $top / 2;\r\n  margin-left: - $left / 2;\r\n  top: 50%;\r\n  left: 50%;\r\n}\r\n\r\n@mixin reset-brds-left($value: 4px) {\r\n  @include border-radius(0 $value $value 0);\r\n}\r\n\r\n@mixin reset-brds-right($value: 4px) {\r\n  @include border-radius($value 0 0 $value);\r\n}\r\n\r\n@mixin truncate($truncation-boundary) {\r\n  max-width: $truncation-boundary;\r\n  white-space: nowrap;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n@mixin adaptive($el, $type : 'max') {\r\n  .#{$el} {\r\n    @content;\r\n    @each $class, $screen in (xs, 'phone'), (sm, 'phablet'), (md, 'tablet'), (lg, 'desktop'), (xl, 'desktop-wide') {\r\n      @if ($type == 'min') {\r\n        @include mq($sc reen, 'min') {\r\n          &-#{$class} {\r\n            @content;\r\n          }\r\n        }\r\n      } @else {\r\n        @include mq($screen) {\r\n          &-#{$class} {\r\n            @content;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n@mixin align-middle {\r\n  @include flex;\r\n  align-items: center;\r\n  flex-grow: 1;\r\n}\r\n@mixin full-space{\r\n  content: \"\";\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n}\r\n@mixin vd($el) {\r\n  @each $class in $el{\r\n    //.vd-#{$class},\r\n    [data-is='vd-block-#{$class}']{\r\n      @content;\r\n    }\r\n  }\r\n}\r\n.modal-open{\r\n  overflow: hidden !important;\r\n}\r\n// todo sprite","img{\r\n  max-width: 100%;\r\n  height: auto;\r\n}","/**\r\n * Base\r\n */\r\n > *{\r\n  //font-family: $font-main;\r\n  //font-size: $font-size-base;\r\n  //font-weight: $font-light;\r\n  //color: $font-color-main;\r\n  @include mq('tablet-wide') {\r\n    font-size: 8px;\r\n  }\r\n}\r\n%heading {\r\n  //font-family: $font-secondary-bold;\r\n  @include mq('tablet') {\r\n    text-align: center;\r\n  }\r\n}\r\n\r\n//\r\n// generate styles of heading\r\n@for $i from 1 through 6 {\r\n  .heading-h#{$i},h#{$i} {\r\n    @extend %heading;\r\n    margin-top: 0;\r\n    margin-bottom: rem(8px);\r\n  }\r\n  .like-heading-h#{$i} {\r\n    margin-top: 0;\r\n    @extend %heading;\r\n  }\r\n}\r\n\r\n.heading-h1,\r\n.entry-description h1,\r\n.like-heading-h1 {\r\n  font-size: $font-size-h1;\r\n  line-height: lh($font-size-h1, 54);\r\n  margin-bottom: rem(37px);\r\n}\r\n\r\n.heading-h2,\r\n.entry-description h2,\r\n.like-heading-h2 {\r\n  font-size: $font-size-h2;\r\n  line-height: lh($font-size-h2, 42);\r\n  margin-bottom: rem(25px);\r\n}\r\n\r\n.heading-h3,\r\n.entry-description h3,\r\n.like-heading-h3 {\r\n  //font-family: $font-secondary;\r\n  font-size: $font-size-h3;\r\n  line-height: lh($font-size-h1, 33);\r\n  margin-bottom: rem(10px);\r\n}\r\n\r\n.heading-h4,\r\n.entry-description h4,\r\n.like-heading-h4 {\r\n  text-align: center;\r\n  font-size: $font-size-h4;\r\n  line-height: lh($font-size-h1, 27);\r\n  margin-bottom: rem(7px);\r\n}\r\n\r\n.entry-description h4 {\r\n  text-align: left;\r\n}\r\n\r\n.heading-h5,\r\n.entry-description h5,\r\n.like-heading-h5 {\r\n  font-size: $font-size-h5;\r\n  line-height: lh($font-size-h1, 47);\r\n  margin-bottom: rem(25px);\r\n}\r\n\r\nul {\r\n  line-height: lh($font-size-base, 32);\r\n  li {\r\n    line-height: lh(18, 22);\r\n  }\r\n}\r\n\r\n//.entry-description {\r\n//  margin-bottom: rem(30px);\r\n//  &:last-of-type {\r\n//    margin-bottom: rem(60px);\r\n//  }\r\n//}\r\n//\r\n//.entry-description a,\r\n//.link {\r\n//  font-size: $fontSizeBase;\r\n//  color: $colorLink;\r\n//  @include transition(border-color, .3s);\r\n//  border-bottom: 1px solid $transparent;\r\n//  &:hover {\r\n//    color: lighten($colorLink, 8);\r\n//    border-bottom: 1px solid lighten($colorLink, 8);\r\n//  }\r\n//  &:focus {\r\n//    text-decoration: none;\r\n//    outline: none;\r\n//  }\r\n//}\r\n//\r\n//\r\n","// calculate rem to px\r\n@function rem($pixels, $context: 16px) {\r\n    @if (unitless($pixels)) {\r\n        $pixels: $pixels * 1px;\r\n    }\r\n\r\n    @if (unitless($context)) {\r\n        $context: $context * 1px;\r\n    }\r\n\r\n    @return $pixels / $context * 1rem;\r\n}\r\n\r\n// calculate px to factor\r\n@function lh($inputPixels, $outputPixels) {\r\n    @if (unitless($inputPixels)) {\r\n        $inputPixels: $inputPixels * 1px;\r\n    }\r\n\r\n    @if (unitless($outputPixels)) {\r\n        $outputPixels: $outputPixels * 1px;\r\n    }\r\n\r\n    @return $outputPixels / $inputPixels;\r\n}\r\n$fontSizeBase:  15px;\r\n// calculate $fontSizeBase to custom px\r\n@function fz($output) {\r\n    @if (unitless($output)) {\r\n        $output: $output * 1px;\r\n    }\r\n\r\n    @return $output - $fontSizeBase + $fontSizeBase;\r\n}\r\n// set tne z-index position\r\n@function z($name) {\r\n    @if index($z-indexes, $name) {\r\n        @return (length($z-indexes) - index($z-indexes, $name)) + 1;\r\n    } @else {\r\n        @warn 'There is no item \"#{$name}\" in this list; choose one of: #{$z-indexes}';\r\n        @return null;\r\n    }\r\n}",".help{\r\n  border-radius: 100%;\r\n  background: transparent;\r\n  &:hover{\r\n    //pointer-events: none;\r\n  }\r\n}",".vis-home{\r\n  display: flex;\r\n}",".loader {\r\n  .la-timer {\r\n    color: $color-main;\r\n  }\r\n  &.normal {\r\n    position: absolute;\r\n  }\r\n  &.auto-saving {\r\n    display: none;\r\n    &.mini {\r\n      display: inline-block;\r\n    }\r\n  }\r\n}\r\n\r\n.loading > .container-fluid:not(.auto-saving) {\r\n  .panel {\r\n    opacity: .5;\r\n    pointer-events: none;\r\n    flex: 1 1 100%;\r\n    width: 100%;\r\n  }\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.panel-body {\r\n  min-height: 500px;\r\n}\r\n\r\n.sync-loader {\r\n  flex: 1;\r\n  margin-left: rem(20);\r\n  .fa {\r\n    font-size: 36px;\r\n  }\r\n}\r\n\r\n.auto-saving .panel .panel-heading {\r\n  justify-content: space-between;\r\n}\r\n\r\n","/**\r\n * http://chir.ag/projects/name-that-color\r\n * color\r\n */\r\n// Palette\r\n$p_white:                   #fff;\r\n$p_black:                   #000;\r\n$p_shark:                   #191b1f;\r\n$p_athens-gray:             #f6f7f9;\r\n$p_waterloo:                #7c8598;\r\n$p_astral:                  #337ab7;\r\n$p_link-water:              #e6eCf7;\r\n$p_anakiwa:                 #a6c5ff;\r\n$p_persimmon:               #ff5454;\r\n$p_burnt_sienna:            #eb6651;\r\n$p_chablis:                 #fff0f0;\r\n$p_vanilla_ice:             #f4dada;\r\n$p_contessa:                #cb6868;\r\n$p_panache:                 #e5f4e9;\r\n$p_fringy_flower:           #c1e6cb;\r\n$p_aqua_forest:             #62a975;\r\n$p_pearl_lusta:             #fcf0d6;\r\n$p_chamois:                 #ead6ac;\r\n$p_old_gold:                #d2a647;\r\n$p_lochmara:                #0087c8;\r\n$transparent:               rgba(255, 255, 255, 0);",".vis-template-thumb{\r\n  padding: $default-padding;\r\n  max-width: 250px;\r\n  &:not(:last-child()){\r\n    margin-right:  rem(20);\r\n  }\r\n\r\n  &.active{\r\n    outline: 1px solid red;\r\n  }\r\n}",".auto-save{\r\n  .custom-switch{\r\n    color: $p_black;\r\n    &.active{\r\n      color: $color-info;\r\n    }\r\n  }\r\n\r\n\r\n}","@import \"base/helper/functions\";\r\n@import \"base/palette\";\r\n\r\n$default-padding: rem(10);\r\n// primary\r\n$color-primary: #4fb5e7;\r\n$color-primary-darken: #27b7fd;\r\n$color-primary-darkenx2: #1589c1;\r\n//success\r\n$color-success: #86ce99;\r\n$color-success-darken: #2cbd53;\r\n$color-success-darkenx2: #4faf68;\r\n//danger\r\n$color-danger: #cf4949;\r\n$color-danger-darken: #da3d3d;\r\n$color-danger-darkenx2: #bc3a3a;\r\n// info\r\n$color-info: #f0b840;\r\n$color-info-darken: #eba612;\r\n$color-info-darkenx2: #d59202;\r\n//color-success\r\n$color-success: #cfcfcf;\r\n$color-success-darken: #b1b1b1;\r\n$color-success-darkenx2: #959595;\r\n\r\n// main\r\n$color-main: $p_black;\r\n$color-secondary: $color-primary;\r\n\r\n/**\r\n * Font\r\n */\r\n// main\r\n\r\n$font-main: 'Roboto';\r\n$font-secondary: 'Blogger Sans';\r\n$font-secondary-bold: 'Blogger Sans Bold';\r\n\r\n// font color\r\n$font-color-main: $p_black;\r\n$font-color-secondary: $p_black;\r\n\r\n// weight\r\n$font-exLight: 100;\r\n$font-light: 300;\r\n$font-normal: 400;\r\n$font-medium: 500;\r\n$font-bold: 600;\r\n\r\n// font size\r\n$font-size-base: 15px;\r\n$font-size-xs: fz(13);\r\n$font-size-sm: fz(18);\r\n$font-size-md: fz(20);\r\n$font-size-lg: fz(26);\r\n\r\n$font-size-h1: fz(47);\r\n$font-size-h2: fz(35);\r\n$font-size-h3: fz(26);\r\n$font-size-h4: fz(20);\r\n$font-size-h5: fz(40);\r\n\r\n"]}